package lt.pavilonis.classroommonitor.generated;

import jakarta.xml.ws.Service;
import jakarta.xml.ws.WebEndpoint;
import jakarta.xml.ws.WebServiceClient;
import jakarta.xml.ws.WebServiceFeature;
import org.springframework.core.io.ClassPathResource;

import javax.xml.namespace.QName;
import java.io.IOException;
import java.net.URL;

/**
 * This class was generated by Apache CXF 3.5.5
 * 2023-01-15T19:04:39.947+02:00
 * Generated source version: 3.5.5
 *
 */
@WebServiceClient(name = "DoorsWebService",
                  wsdlLocation = DoorsWebService.WSDL_PATH,
                  targetNamespace = "http://soap.ws.ts1000.tesa.es/")
public class DoorsWebService extends Service {

    public final static QName SERVICE = new QName("http://soap.ws.ts1000.tesa.es/", "DoorsWebService");
    public final static QName WirelessDoorsServicePort = new QName("http://soap.ws.ts1000.tesa.es/", "WirelessDoorsServicePort");
    public static final String WSDL_PATH = "soap/DoorsWebService.wsdl";
    public final static URL WSDL_LOCATION;

   static {
      try {
         WSDL_LOCATION = new ClassPathResource(WSDL_PATH).getURL();
      } catch (IOException e) {
         throw new RuntimeException("Can not initialize the default wsdl from "+ WSDL_PATH, e);
      }
   }

    public DoorsWebService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public DoorsWebService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public DoorsWebService() {
        super(WSDL_LOCATION, SERVICE);
    }

    public DoorsWebService(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public DoorsWebService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public DoorsWebService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }


   /**
    * @return returns WirelessDoorsService
    */
   @WebEndpoint(name = "WirelessDoorsServicePort")
   public WirelessDoorsService getWirelessDoorsServicePort() {
      return super.getPort(WirelessDoorsServicePort, WirelessDoorsService.class);
   }

   /**
    * @param features A list of {@link jakarta.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
    * @return returns WirelessDoorsService
    */
   @WebEndpoint(name = "WirelessDoorsServicePort")
   public WirelessDoorsService getWirelessDoorsServicePort(WebServiceFeature... features) {
      return super.getPort(WirelessDoorsServicePort, WirelessDoorsService.class, features);
   }

}
